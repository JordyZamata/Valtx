package com.valtx.seleccion.exception;

import java.time.LocalDateTime;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

public class ResponseExceptionHandler {

		@ExceptionHandler(Exception.class)
		public final ResponseEntity<ExceptionResponse> manejarTodasExceptiones(Exception ex, WebRequest request){
			ExceptionResponse er = new ExceptionResponse(LocalDateTime.now(), ex.getMessage(), request.getDescription(false));
			return new ResponseEntity<ExceptionResponse>(er, HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
		@ExceptionHandler(ModeloNotFoundException.class)
		public ResponseEntity<ExceptionResponse> manejarModeloNotFoundException
								(ModeloNotFoundException ex, WebRequest request){
			ExceptionResponse er = new ExceptionResponse(LocalDateTime.now(), ex.getMessage(), request.getDescription(false));
			return new ResponseEntity<ExceptionResponse>(er, HttpStatus.NOT_FOUND);
		}

		//Se envia  algo mal
		@Override
		protected ResponseEntity<Object> handleMethodArgumentNotValid
								(MethodArgumentNotValidException ex,
								 HttpHeaders headers, HttpStatus status, WebRequest request) {
		
			String mensaje = ex.getBindingResult().getAllErrors().stream()
															.map(e -> e.getDefaultMessage().toString()
															.concat(", ")).collect(Collectors.joining());
			
			
			ExceptionResponse er = new ExceptionResponse(LocalDateTime.now(), mensaje, request.getDescription(false));
			return new ResponseEntity<Object>(er, HttpStatus.BAD_REQUEST);
			
		}
	
	
}
